diff --git a/app/DoctrineMigrations/Version20160726174534.php b/app/DoctrineMigrations/Version20160726174534.php
new file mode 100644
index 0000000..77aca96
--- /dev/null
+++ b/app/DoctrineMigrations/Version20160726174534.php
@@ -0,0 +1,36 @@
+<?php
+
+namespace Application\Migrations;
+
+use Doctrine\DBAL\Migrations\AbstractMigration;
+use Doctrine\DBAL\Schema\Schema;
+
+/**
+ * Auto-generated Migration: Please modify to your needs!
+ */
+class Version20160726174534 extends AbstractMigration
+{
+    /**
+     * @param Schema $schema
+     */
+    public function up(Schema $schema)
+    {
+        // this up() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() != 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('CREATE TABLE subscription (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, stripe_subscription_id VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_A3C664D3A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB');
+        $this->addSql('ALTER TABLE subscription ADD CONSTRAINT FK_A3C664D3A76ED395 FOREIGN KEY (user_id) REFERENCES fos_user (id) ON DELETE CASCADE');
+        $this->addSql('ALTER TABLE subscription ADD stripe_plan_id VARCHAR(255) NOT NULL, ADD ends_at DATETIME DEFAULT NULL, ADD billing_period_ends_at DATETIME DEFAULT NULL');
+    }
+
+    /**
+     * @param Schema $schema
+     */
+    public function down(Schema $schema)
+    {
+        // this down() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() != 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('DROP TABLE subscription');
+    }
+}
diff --git a/src/AppBundle/Entity/Subscription.php b/src/AppBundle/Entity/Subscription.php
new file mode 100644
index 0000000..438f62c
--- /dev/null
+++ b/src/AppBundle/Entity/Subscription.php
@@ -0,0 +1,94 @@
+<?php
+
+namespace AppBundle\Entity;
+
+use Doctrine\ORM\Mapping as ORM;
+
+/**
+ * @ORM\Entity
+ * @ORM\Table(name="subscription")
+ */
+class Subscription
+{
+    /**
+     * @ORM\Id
+     * @ORM\GeneratedValue(strategy="AUTO")
+     * @ORM\Column(type="integer")
+     */
+    private $id;
+
+    /**
+     * @ORM\OneToOne(targetEntity="User", inversedBy="subscription")
+     * @ORM\JoinColumn(nullable=false, onDelete="CASCADE")
+     */
+    private $user;
+
+    /**
+     * @ORM\Column(type="string")
+     */
+    private $stripeSubscriptionId;
+
+    /**
+     * @ORM\Column(type="string")
+     */
+    private $stripePlanId;
+
+    /**
+     * @ORM\Column(type="datetime", nullable=true)
+     */
+    private $endsAt;
+
+    /**
+     * @ORM\Column(type="datetime", nullable=true)
+     */
+    private $billingPeriodEndsAt;
+
+    public function getId()
+    {
+        return $this->id;
+    }
+
+    /**
+     * @return User
+     */
+    public function getUser()
+    {
+        return $this->user;
+    }
+
+    public function setUser(User $user)
+    {
+        $this->user = $user;
+    }
+
+    public function getStripeSubscriptionId()
+    {
+        return $this->stripeSubscriptionId;
+    }
+
+    public function getStripePlanId()
+    {
+        return $this->stripePlanId;
+    }
+
+    /**
+     * @return \DateTime
+     */
+    public function getEndsAt()
+    {
+        return $this->endsAt;
+    }
+
+    public function setEndsAt(\DateTime $endsAt = null)
+    {
+        $this->endsAt = $endsAt;
+    }
+
+    /**
+     * @return \DateTime
+     */
+    public function getBillingPeriodEndsAt()
+    {
+        return $this->billingPeriodEndsAt;
+    }
+}
diff --git a/src/AppBundle/Entity/User.php b/src/AppBundle/Entity/User.php
index 28fda44..f4a3356 100644
--- a/src/AppBundle/Entity/User.php
+++ b/src/AppBundle/Entity/User.php
@@ -23,6 +23,11 @@ class User extends BaseUser
      */
     private $stripeCustomerId;
 
+    /**
+     * @ORM\OneToOne(targetEntity="Subscription", mappedBy="user")
+     */
+    private $subscription;
+
     public function getId()
     {
         return $this->id;
@@ -37,4 +42,12 @@ class User extends BaseUser
     {
         $this->stripeCustomerId = $stripeCustomerId;
     }
+
+    /**
+     * @return Subscription
+     */
+    public function getSubscription()
+    {
+        return $this->subscription;
+    }
 }
